[gcode_macro servo_test_angle]
gcode:
	{% set ANGLE  = params.ANGLE|int %}
	
    SET_SERVO SERVO=klicky_servo ANGLE={ANGLE}
    G4 P250
    SET_SERVO SERVO=klicky_servo WIDTH=0.0

[gcode_macro START_PRINT]
gcode:
   {% set BED_TEMP = params.BED_TEMP|default(70)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(215)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Use absolute coordinates
    G90
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Home the printer
    G28
    BED_MESH_CLEAR     #Clears old saved bed mesh
    BED_MESH_CALIBRATE #create bed mesh the size of the print object
    # Move the nozzle near the bed
    G1 Z5 F3000
    # Move the nozzle very close to the bed
    G1 Z10 F300
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    G28
    G92 E0
    G1 Z3.0 F3000
    G1 X5 Y20 Z0.3 F5000.0
    G1 X5 Y200 Z0.3 F1500.0 E15
    G1 X7 Y200 Z0.3 F5000.0 
    G1 X7 Y20 Z0.3 F1500.0 E30
    G92 E0
    G1 Z2.0 F3000

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Relative positionning
    G91
    # Retract and raise Z
    G1 Z0.2 E-2 F2400
    # Wipe out
    G1 X5 Y5 F3000
    # Raise Z more
    G1 Z50
    # Absolute positionning
    G90
    # Present print
    G1 X0 Y200
    # Disable steppers
    M84
    SET_GCODE_OFFSET Z=0

[pause_resume]

[gcode_macro M600]
gcode:
    #LCDRGB R=0 G=1 B=0  ; Turn LCD green
    PAUSE                ; Pause

[gcode_macro FIND_Z_OFFSET]
description: this is a test macro
gcode:
    G28
    G1 X160 F5000
    G1 Y150 F5000

    probe_calibrate

[gcode_macro UNLOAD]
gcode:
    {% set LENGTH = params.LENGTH|default(450)|float %}

    {% if printer.configfile.config.extruder.min_extrude_temp is defined %}
        {% set TARGET = printer.configfile.config.extruder.min_extrude_temp|float %}
    {% else %}
        {% set TARGET = 220.0 %}
    {% endif %}

    {% set TEMP = printer.extruder.temperature|float %}

    {% if TEMP|int < TARGET|int %}
        M117 Heating nozzle...
        M109 S{TARGET}
    {% endif %}

    G91
    G1 E20.0 F1200
    G1 E10.0 F1600
    G1 E-50 F7000
    G1 E-{LENGTH} F3000
    G90

[gcode_macro PURGE]
gcode:
    M117 PURGING..
    G91
    G1 E45.0 F250
    G90

# # Edit the default() value for FAST
# to the amount of extrusion required to bring the filament to
# just before it starts coming out the hotend

# # Edit the default() value for SLOW
# to the amount of extrusion required after it reaches the hotend

[gcode_macro LOAD]
gcode:
    {% set LENGTH = params.LENGTH|default(400)|float %}

    {% if printer.configfile.config.extruder.min_extrude_temp is defined %}
        {% set TARGET = printer.configfile.config.extruder.min_extrude_temp|float %}
    {% else %}
        {% set TARGET = 220.0 %}
    {% endif %}

    {% set TEMP = printer.extruder.temperature|float %}

    {% if TEMP|int < TARGET|int %}
        M117 Heating nozzle...
        M109 S{TARGET}
    {% endif %}
    {% set SLOW = params.SLOW|default(60)|float %}
    {% set FAST = params.FAST|default(200)|float %}
    M117  LOADING...
    G91
    G1 E25.0 F1000
    G1 E{FAST} F2500
    G4 P900
    G1 E{SLOW} F250
    G90

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
gcode:
    # Parameters
    {% set z = params.Z|default(10)|int %}                                                   ; z hop amount

    {% if printer['pause_resume'].is_paused|int == 0 %}
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE={z}                              ; set z hop variable for reference in resume macro
        SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=etemp VALUE={printer['extruder'].target}    ; set hotend temp variable for reference in resume macro

        #SET_FILAMENT_SENSOR SENSOR=my_sensor ENABLE=1                                        ; disable filament sensor
        SAVE_GCODE_STATE NAME=PAUSE                                                          ; save current print position for resume
        BASE_PAUSE                                                                           ; pause print
        {% if (printer.gcode_move.position.z + z) < printer.toolhead.axis_maximum.z %}       ; check that zhop doesn't exceed z max
            G91                                                                              ; relative positioning
            G1 Z{z} F900                                                                     ; raise Z up by z hop amount
        {% else %}
            { action_respond_info("Pause zhop exceeds maximum Z height.") }                  ; if z max is exceeded, show message and set zhop value for resume to 0
            SET_GCODE_VARIABLE MACRO=RESUME VARIABLE=zhop VALUE=0
        {% endif %}
        G90                                                                                  ; absolute positioning
        G1 X{printer.toolhead.axis_maximum.x/2} Y{printer.toolhead.axis_minimum.y+5} F6000   ; park toolhead at front center
        SAVE_GCODE_STATE NAME=PAUSEPARK                                                      ; save parked position in case toolhead is moved during the pause (otherwise the return zhop can error)
        M104 S180                                                                             ; cool off hotend
        SET_IDLE_TIMEOUT TIMEOUT=43200                                                       ; set timeout to 12 hours
    {% endif %}

[gcode_macro RESUME]
rename_existing: BASE_RESUME
variable_zhop: 0
variable_etemp: 0
gcode:
    # Parameters
    {% set e = params.E|default(2.5)|int %}                                          ; hotend prime amount (in mm)

    {% if printer['pause_resume'].is_paused|int == 1 %}
        #SET_FILAMENT_SENSOR SENSOR=my_sensor ENABLE=1                                ; enable filament sensor
        #INITIAL_RGB                                                                    ; reset LCD color
        SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout}  ; set timeout back to configured value
        {% if etemp > 0 %}
            M109 S{etemp|int}                                                        ; wait for hotend to heat back up
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSEPARK MOVE=1 MOVE_SPEED=100                     ; go back to parked position in case toolhead was moved during pause (otherwise the return zhop can error)
        G91                                                                          ; relative positioning
        M83                                                                          ; relative extruder positioning
        {% if printer[printer.toolhead.extruder].temperature >= printer.configfile.settings.extruder.min_extrude_temp %}
            G1 Z{zhop * -1} E{e} F900                                                ; prime nozzle by E, lower Z back down
        {% else %}
            G1 Z{zhop * -1} F900                                                     ; lower Z back down without priming (just in case we are testing the macro with cold hotend)
        {% endif %}
        RESTORE_GCODE_STATE NAME=PAUSE MOVE=1 MOVE_SPEED=60                          ; restore position
        BASE_RESUME                                                                  ; resume print
    {% endif %}

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    SET_IDLE_TIMEOUT TIMEOUT={printer.configfile.settings.idle_timeout.timeout} ; set timeout back to configured value
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    END_PRINT
    BASE_CANCEL_PRINT

[gcode_macro SET_MATERIAL]
gcode:
    {% set MATERIAL = params.MATERIAL|default('PLA')|string %}
    {% if MATERIAL == 'PLA' %}
        # Set pressure_advance settings
        SET_PRESSURE_ADVANCE ADVANCE=0.663 SMOOTH_TIME=0.040
    {% elif MATERIAL == 'Matte PLA' %}
        SET_PRESSURE_ADVANCE ADVANCE=0.630 SMOOTH_TIME=0.040
        SET_GCODE_OFFSET Z=-0.080 MOVE=1
    {% elif MATERIAL == 'PLA+' %}
        SET_PRESSURE_ADVANCE ADVANCE=0.650 SMOOTH_TIME=0.040
        SET_GCODE_OFFSET Z=-0.020 MOVE=1
    {% elif MATERIAL == 'PETG' %}
        SET_PRESSURE_ADVANCE ADVANCE=0.829 SMOOTH_TIME=0.040
        SET_GCODE_OFFSET Z=-0.180 MOVE=1
    {% elif MATERIAL == 'ABS' %}
        SET_PRESSURE_ADVANCE ADVANCE=0.900 SMOOTH_TIME=0.040
        SET_GCODE_OFFSET Z=-0.130 MOVE=1
    {% endif %}

[gcode_macro HOME_ALL]
gcode:
        G28 #home all axis